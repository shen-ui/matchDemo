{"version":3,"sources":["resources/loading.gif","Components/Banner.js","Components/SubBoard.js","Components/Field.js","Components/TeamBanner.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","src","SubBoard","subs","useState","homeSubs","setHomeSubs","awaySubs","setAwaySubs","useEffect","HomeTeam","Player","forEach","player","AwayTeam","className","type","map","sub","index","_attributes","Number","Name","Field","forms","setAwayTeam","setHomeTeam","HomeTeamFormation","Row","row","homeTeam","AwayTeamFormation","awayTeam","TeamBanner","convert","require","App","data","setData","axios","get","then","res","parser","JSON","parse","xml2json","compact","spaces","Formation","catch","err","console","log","loading","alt","Formations","Substitutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83604dca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.646e6de6.gif\";","const Banner = () => {\r\n    return(\r\n        <header>\r\n            <img src=\"../resources/LeagueIcon.svg\"/>\r\n            MATCH SUMMARY\r\n        </header>\r\n    )\r\n}\r\nexport default Banner;","import { useEffect, useState } from \"react\";\r\n\r\nconst SubBoard = ({subs}) => {\r\n\r\n    const[homeSubs, setHomeSubs] = useState([]);\r\n    const[awaySubs, setAwaySubs] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        subs.HomeTeam.Player.forEach((player)=>{\r\n            setHomeSubs(homeSubs => [player,...homeSubs])\r\n        })\r\n        subs.AwayTeam.Player.forEach((player)=>{\r\n            setAwaySubs(awaySubs => [player,...awaySubs])\r\n        })\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"sub-pane\">\r\n            {/* Game Banner */}\r\n            <span className=\"sub-banner\">\r\n                <img className=\"team-icon\" src=\"/client/src/resources/PlayerIcon.svg\" type=\"svg\"/>\r\n                SUBSTITUTES\r\n                <img className=\"team-icon\" src=\"../resources/Team2Icon.svg\" type=\"svg\"/>\r\n            </span>\r\n\r\n            {/* Substitute Panel*/}\r\n            <div className=\"sub-pane-container\">\r\n                <div className=\"hometeam\">\r\n                {// set up home team: left side of panel\r\n                    homeSubs.map((sub, index)=>{\r\n                        return(\r\n                            <span className=\"home-sub-player\" key={index}>\r\n                                <ul>\r\n                                    {sub._attributes.Number}\r\n                                    {sub._attributes.Name}\r\n                                </ul>\r\n                            </span>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                \r\n                <div className=\"awayteam\">\r\n                {// set up away team: right side of panel\r\n                    awaySubs.map((sub, index)=>{\r\n                        return(\r\n                            <span className=\"away-sub-player\" key={index}>\r\n                                <ul>\r\n                                    {sub._attributes.Name}\r\n                                    {sub._attributes.Number}\r\n                                </ul>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\nexport default SubBoard;","import { useState,useEffect } from \"react\";\r\n\r\nconst Field = ({forms}) => {\r\n    \r\n    const [awayTeam, setAwayTeam] = useState([]);\r\n    const [homeTeam, setHomeTeam] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //const homeTeamFormation = forms.HomeTeamFormation._attributes.Name;\r\n        //const awayTeamFormation = forms.AwayTeamFormation._attributes.Name;\r\n\r\n        forms.HomeTeamFormation.Row.forEach((row)=>{\r\n            setHomeTeam(homeTeam => [row,...homeTeam])\r\n        })\r\n        \r\n        forms.AwayTeamFormation.Row.forEach((row)=>{\r\n            setAwayTeam(awayTeam => [row,...awayTeam])\r\n        })\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"field-pane\">\r\n        {//console.log(awayTeam)\r\n        }\r\n        {//console.log(homeTeam)\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Field;","const TeamBanner = () => {\r\n    return(\r\n        <div className=\"team-banner\">\r\n            <img src=\"/src/resources/LeagueIcon.svg\"/>\r\n            <img/>\r\n            <img/>\r\n        </div>\r\n    )\r\n}\r\nexport default TeamBanner;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport loading from './resources/loading.gif'\nimport './App.css';\n\nimport Banner from './Components/Banner';\nimport SubBoard from './Components/SubBoard';\nimport Field from './Components/Field';\nimport TeamBanner from './Components/TeamBanner';\n\nconst convert = require(\"xml-js\");\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    axios\n      .get(' https://static.yinzcam.com/interviews/web/api/match1.xml', {\n        'Content-Type': \"applications/xml\"\n      })\n      .then((res) => {\n        const parser = JSON.parse(\n          convert.xml2json(res.data, {compact: true, spaces: 2})\n        );\n        // Only need xml metadata for error handling.\n        setData(parser.Formation);\n      })\n      .catch((err) => {\n        console.log(\"error: \", err);\n      })\n  }, []);\n\n  return(\n    <div className=\"App\">\n      { // empty state ? loading : app components\n        data == null\n        \n        ? <img className=\"loading-icon\" src={loading} alt='loading'/>\n        \n        : <div className=\"App-container\">\n          <TeamBanner/>\n            <div className = \"App-pane\">\n              <Banner/>\n              <Field forms={data.Formations}/>\n              <SubBoard subs={data.Substitutes}/>\n            </div>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}