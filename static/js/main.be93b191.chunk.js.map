{"version":3,"sources":["resources/loading.gif","Components/Banner.js","resources/Team1Icon.svg","resources/Team2Icon.svg","Components/SubBoard.js","Components/Field.js","resources/LeagueIcon.svg","Components/TeamBanner.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","timeStamp","location","className","merid","hour","slice","dateConfig","SubBoard","subs","useState","homeSubs","setHomeSubs","awaySubs","setAwaySubs","useEffect","HomeTeam","Player","forEach","player","AwayTeam","src","Team1Icon","type","Team2Icon","map","sub","index","_attributes","Number","Name","Field","forms","setAwayTeam","setHomeTeam","HomeTeamFormation","Row","row","homeTeam","AwayTeamFormation","awayTeam","TeamBanner","LeagueIcon","convert","require","App","data","setData","axios","get","then","res","parser","JSON","parse","xml2json","compact","spaces","Formation","console","log","catch","err","loading","alt","Timestamp","_text","Venue","Formations","Substitutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be93b191.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.646e6de6.gif\";","const Banner = ({timeStamp, location}) => {\r\n    function dateConfig(){\r\n        let merid = '';\r\n        let hour = timeStamp.slice(11,13);\r\n        \r\n        if(hour >= 12){\r\n            hour -= 12;\r\n            merid = \"PM\"\r\n        }\r\n        else{\r\n            merid = 'AM'\r\n        }\r\n        \r\n        let time = \r\n            timeStamp.slice(5,7) + \"/\" + \r\n            timeStamp.slice(8,10) + \"/\" + \r\n            timeStamp.slice(0,4)  + \"\\t\" +\r\n            hour + \":\" + \r\n            timeStamp.slice(14,16) +  \r\n            merid + \"\\t\"\r\n\r\n\r\n        return(time);    \r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <p className=\"title\">MATCH SUMMARY</p>\r\n            <p className=\"timestamp\">{dateConfig()} {location}</p>\r\n        </header>\r\n    )\r\n}\r\nexport default Banner;","export default __webpack_public_path__ + \"static/media/Team1Icon.d27e5db9.svg\";","export default __webpack_public_path__ + \"static/media/Team2Icon.7eef2b2d.svg\";","import { useEffect, useState } from \"react\";\r\nimport Team1Icon from '../resources/Team1Icon.svg'\r\nimport Team2Icon from '../resources/Team2Icon.svg'\r\nconst SubBoard = ({subs}) => {\r\n\r\n    const[homeSubs, setHomeSubs] = useState([]);\r\n    const[awaySubs, setAwaySubs] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        subs.HomeTeam.Player.forEach((player)=>{\r\n            setHomeSubs(homeSubs => [player,...homeSubs])\r\n        })\r\n        subs.AwayTeam.Player.forEach((player)=>{\r\n            setAwaySubs(awaySubs => [player,...awaySubs])\r\n        })\r\n\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"sub-pane\">\r\n            {/* Game Banner */}\r\n            <span className=\"sub-banner\">\r\n                <div className=\"banner-icon-container\">\r\n                    <img className=\"hometeam-icon\" src={Team1Icon} type=\"svg\"/>\r\n                </div>\r\n                <div>SUBSTITUTES</div>\r\n                <div className=\"banner-icon-container\">\r\n                    <img className=\"awayteam-icon\" src={Team2Icon} type=\"svg\"/>\r\n                </div>\r\n            </span>\r\n\r\n            {/* Substitute Panel*/}\r\n            <div className=\"sub-pane-container\">\r\n                <div className=\"hometeam\">\r\n                {// set up home team: left side of panel\r\n                    homeSubs.map((sub, index)=>{\r\n                        return(\r\n                            <span className=\"home-sub-player\" key={index}>\r\n                                <ul className=\"home-sub-player\">\r\n                                    <div className=\"player-number\">{sub._attributes.Number}</div>\r\n                                     <div>{sub._attributes.Name}</div>\r\n\r\n                                </ul>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                \r\n                <div className=\"awayteam\">\r\n                {// set up away team: right side of panel\r\n                    awaySubs.map((sub, index)=>{\r\n                        return(\r\n                            <span className=\"away-sub-player\" key={index}>\r\n                                <ul className=\"away-sub-player\">\r\n                                    <div className=\"player-number\">{sub._attributes.Number}</div>\r\n                                     <div>{sub._attributes.Name}</div>\r\n                                </ul>\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\nexport default SubBoard;","import { useState,useEffect } from \"react\";\r\n\r\nconst Field = ({forms}) => {\r\n    \r\n    const [awayTeam, setAwayTeam] = useState([]);\r\n    const [homeTeam, setHomeTeam] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //const homeTeamFormation = forms.HomeTeamFormation._attributes.Name;\r\n        //const awayTeamFormation = forms.AwayTeamFormation._attributes.Name;\r\n\r\n        forms.HomeTeamFormation.Row.forEach((row)=>{\r\n            setHomeTeam(homeTeam => [row,...homeTeam])\r\n        })\r\n        \r\n        forms.AwayTeamFormation.Row.forEach((row)=>{\r\n            setAwayTeam(awayTeam => [row,...awayTeam])\r\n        })\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"field-pane\">\r\n        {//console.log(awayTeam)\r\n        }\r\n        {//console.log(homeTeam)\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Field;","export default __webpack_public_path__ + \"static/media/LeagueIcon.25ba238b.svg\";","import LeagueIcon from '../resources/LeagueIcon.svg'\r\nimport Team1Icon from '../resources/Team1Icon.svg'\r\nimport Team2Icon from '../resources/Team2Icon.svg'\r\n\r\nconst TeamBanner = () => {\r\n    return(\r\n        <div className=\"team-banner\">\r\n            <div className = \"icon-container\">\r\n                <img  src={LeagueIcon}/>\r\n                <img  src={Team2Icon}/>\r\n                <img  src={Team1Icon}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TeamBanner;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport loading from './resources/loading.gif'\nimport './App.css';\n\nimport Banner from './Components/Banner';\nimport SubBoard from './Components/SubBoard';\nimport Field from './Components/Field';\nimport TeamBanner from './Components/TeamBanner';\n\nconst convert = require(\"xml-js\");\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    axios\n      .get(' https://static.yinzcam.com/interviews/web/api/match1.xml', {\n        'Content-Type': \"applications/xml\"\n      })\n      .then((res) => {\n        const parser = JSON.parse(\n          convert.xml2json(res.data, {compact: true, spaces: 2})\n        );\n        // Only need xml metadata for error handling.\n        setData(parser.Formation);\n        console.log(parser)\n      })\n      .catch((err) => {\n        console.log(\"error: \", err);\n      })\n  }, []);\n\n  return(\n    <div className=\"App\">\n      { // empty state ? loading : app components\n        data == null\n        ? <img className=\"loading-icon\" src={loading} alt='loading'/>\n        : <div className=\"App-container\">\n          <TeamBanner/>\n            <div className = \"App-pane\">\n              <Banner timeStamp={data.Timestamp._text} location={data.Venue._text}/>\n              <div className=\"components\">\n                <Field forms={data.Formations}/>\n                <SubBoard subs={data.Substitutes}/>\n              </div>\n            </div>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}