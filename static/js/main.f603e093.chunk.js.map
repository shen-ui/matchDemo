{"version":3,"sources":["resources/LeagueIcon.svg","Components/Header.js","resources/Team1Icon.svg","resources/Team2Icon.svg","Components/SubBoard.js","resources/PlayerIcon.svg","Components/Player.js","Components/Field.js","Components/TeamBanner.js","App.js","reportWebVitals.js","index.js"],"names":["Header","timeStamp","location","src","LeagueIcon","alt","className","merid","hour","slice","day","dateConfig","SubBoard","subs","useState","homeSubs","setHomeSubs","awaySubs","setAwaySubs","setCards","sub","_attributes","RedCards","YellowCards","console","log","useEffect","HomeTeam","Player","forEach","player","AwayTeam","Team2Icon","type","Team1Icon","map","index","Number","Name","attributes","imageURL","undefined","obj","key","hasOwnProperty","isEmpty","PlayerIcon","Field","forms","awayTeam","setAwayTeam","homeTeam","setHomeTeam","setPlayerRow","row","ImageUrl","HomeTeamFormation","Row","AwayTeamFormation","TeamBanner","convert","require","App","data","setData","match","setMatch","axios","get","then","res","newData","JSON","parse","xml2json","compact","spaces","Formation","catch","err","e","placeholder","value","onChange","target","Timestamp","_text","Venue","Formations","Substitutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f603e093.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LeagueIcon.25ba238b.svg\";","import LeagueIcon from '../resources/LeagueIcon.svg';\r\n\r\nconst Header = ({timeStamp, location}) => {\r\n    function dateConfig(){\r\n        let merid = '';\r\n        let hour = timeStamp.slice(11,13);\r\n        let day = timeStamp.slice(5,7);\r\n        //remove 0 if day contains 0\r\n        if(day.slice(0,1) == '0'){\r\n           day = day.slice(1,2);\r\n        }\r\n        //set up meridian and hour\r\n\r\n        if(hour == 12){\r\n            merid = \"PM\";\r\n        }\r\n        else if(hour > 12){\r\n            hour -= 12;\r\n            merid = \"PM\"\r\n        }\r\n        else merid = 'AM';\r\n        \r\n        let time = \r\n            day + \"/\" + \r\n            timeStamp.slice(8,10) + \"/\" + \r\n            timeStamp.slice(0,4)  + \"\\t\" +\r\n            hour + \":\" + \r\n            timeStamp.slice(14,16) +  \" \" +\r\n            merid +\"   \"\r\n\r\n\r\n        return(time);    \r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <img src={LeagueIcon} alt=\"League\"/>\r\n                <div className=\"title\">\r\n                    MATCH SUMMARY\r\n                    <p className=\"timestamp\">\r\n                        {dateConfig()}{location}\r\n                    </p>\r\n                </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/Team1Icon.d27e5db9.svg\";","export default __webpack_public_path__ + \"static/media/Team2Icon.7eef2b2d.svg\";","import { useEffect, useState } from \"react\";\r\nimport Team1Icon from '../resources/Team1Icon.svg'\r\nimport Team2Icon from '../resources/Team2Icon.svg'\r\nimport './SubBoard.css'\r\n\r\n\r\nconst SubBoard = ({subs}) => {\r\n\r\n    const[homeSubs, setHomeSubs] = useState([]);\r\n    const[awaySubs, setAwaySubs] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        subs.HomeTeam.Player.forEach((player)=>{\r\n            setHomeSubs(homeSubs => [player,...homeSubs])\r\n        })\r\n        subs.AwayTeam.Player.forEach((player)=>{\r\n            setAwaySubs(awaySubs => [player,...awaySubs])\r\n        })\r\n\r\n    }, [subs.HomeTeam.Player, subs.AwayTeam.Player])\r\n\r\n    function setCards(sub){\r\n        if(sub._attributes.RedCards>0){\r\n            return (\r\n                <div className='yellowcard-3'/>\r\n            )\r\n        }\r\n        // eslint-disable-next-line\r\n        else if(sub._attributes.YellowCards==1){\r\n            return(\r\n                    <div className='yellowcard-1'/>\r\n                )\r\n        }\r\n        // eslint-disable-next-line\r\n        else if(sub._attributes.YellowCards==2){\r\n            console.log(\"2\");\r\n            return(\r\n                <>\r\n                    <div className='yellowcard-1'/>\r\n                    <div className='yellowcard-2'/>\r\n                </>\r\n                )\r\n        }\r\n        else{\r\n            //console.log(\"none\")\r\n            return;\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <div className=\"sub-pane\">\r\n            {/* Game Banner */}\r\n            <span className=\"sub-banner\">\r\n                    <img src={Team2Icon} type=\"svg\" alt=\"Home\"/>\r\n                    SUBSTITUTES\r\n                    <img src={Team1Icon} type=\"svg\" alt=\"Away\"/>\r\n            </span>\r\n\r\n            {/* Substitute Panel*/}\r\n            <div className=\"sub-pane-container\">\r\n                <div className=\"team\">\r\n                {// set up home team: left side of panel\r\n                    homeSubs.map((sub, index)=> {\r\n\r\n                        return(\r\n                            <ul className=\"home-sub-player\" key={index}>\r\n                                <div className=\"player-number\">{sub._attributes.Number}</div>\r\n                                <div className=\"player-name\">{sub._attributes.Name}\r\n                                <div className=\"home-cards\"> \r\n                                    {\r\n                                        setCards(sub)\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            </ul>\r\n\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n                \r\n                <div className=\"team\">\r\n                {// set up away team: right side of panel\r\n                    awaySubs.map((sub, index)=>{\r\n                        return(\r\n                            <ul className=\"away-sub-player\" key={index}>\r\n                                <div className=\"player-number\">{sub._attributes.Number}</div>\r\n                                <div className=\"player-name\">\r\n                                <div className=\"away-cards\"> \r\n                                    {\r\n                                        setCards(sub)\r\n                                    }\r\n                                </div>\r\n                                    {sub._attributes.Name}\r\n                                </div>\r\n                            </ul>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\nexport default SubBoard;","export default __webpack_public_path__ + \"static/media/PlayerIcon.f95ec6f8.svg\";","import PlayerIcon from '../resources/PlayerIcon.svg'\r\nimport './Player.css'\r\n\r\nconst Player = ({attributes, imageURL}) => {\r\n    function setCards(sub){\r\n        if(sub.RedCards>0){\r\n            return <div className='yellowcard-3'/>\r\n        }\r\n        // eslint-disable-next-line\r\n        else if(sub.YellowCards==1){\r\n            return <div className='yellowcard-1'/>\r\n        }\r\n        // eslint-disable-next-line\r\n        else if(sub.YellowCards==2){\r\n            return(\r\n                <>\r\n                    <div className='yellowcard-1'/>\r\n                    <div className='yellowcard-2'/>\r\n                </>\r\n                )\r\n        }\r\n        else return;\r\n        \r\n    }\r\n\r\n    function isEmpty(obj) {\r\n        for(var key in obj) {\r\n            if(obj.hasOwnProperty(key))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    return(\r\n        <div className=\"player\"\r\n             key={attributes.Number}\r\n        >\r\n            <div className=\"player-container\" key={attributes.Number}>\r\n                    {\r\n                        setCards(attributes)\r\n                    }\r\n                <img className=\"player-icon\" src={(imageURL===undefined || isEmpty(imageURL)) ? PlayerIcon : `url(${imageURL})`} alt=\"player icon\"/>\r\n                <div>{attributes.Name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Player;","import { useState,useEffect } from \"react\";\r\nimport Player from './Player'\r\nimport Team1Icon from '../resources/Team1Icon.svg'\r\nimport Team2Icon from '../resources/Team2Icon.svg'\r\nimport './Field.css'\r\n\r\nconst Field = ({forms}) => {\r\n    \r\n    const [awayTeam, setAwayTeam] = useState([]);\r\n    const [homeTeam, setHomeTeam] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        forms.HomeTeamFormation.Row.forEach((row)=>{\r\n            setHomeTeam(homeTeam => [row,...homeTeam])\r\n        })\r\n        forms.AwayTeamFormation.Row.forEach((row)=>{\r\n            setAwayTeam(awayTeam => [row,...awayTeam])\r\n        })\r\n\r\n    }, [forms.HomeTeamFormation.Row,forms.AwayTeamFormation.Row]);\r\n\r\n    function setPlayerRow(row){\r\n\r\n        if(row.Player._attributes){\r\n            //console.log(row.Player._attributes)\r\n            return <Player \r\n                        attributes={row.Player._attributes} \r\n                        imageURL={row.Player.ImageUrl}\r\n                    />\r\n        }\r\n        else{\r\n            return row.Player.map((player) => {\r\n                return (\r\n                    <Player \r\n                        attributes={player._attributes} \r\n                        imageURL={player._attributes.ImageUrl} \r\n                    />\r\n\r\n                )\r\n            })\r\n        }\r\n        \r\n    };\r\n\r\n    return(\r\n        \r\n        <div className=\"field-pane\">\r\n            <div className=\"field-home-team\">\r\n                {   //render Home Team\r\n                    homeTeam.map((row,index) => {\r\n                        return(\r\n                            <div className={`home-row-${index}`} key={index}>\r\n                            {\r\n                                setPlayerRow(row)\r\n                            }\r\n                            </div>\r\n                        )    \r\n                    })\r\n                }\r\n\r\n            </div>            \r\n            <div className=\"field-home-icon\">\r\n                 <img src={Team2Icon}  alt=\"icon\"/>\r\n            </div>\r\n            <div className=\"field-away-team\">\r\n                {    // Render Away Team\r\n                    awayTeam.map((row,index) => {\r\n                        return(\r\n                            <div className={`away-row-${index}`} key={index}>\r\n                            {\r\n                                setPlayerRow(row)\r\n                            }\r\n                            </div>\r\n                        )    \r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"field-away-icon\">\r\n                 <img src={Team1Icon} alt=\"icon\"/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Field;\r\n\r\n/* \r\n            <div className=\"field-home-team\">\r\n                <img src={Team1Icon} alt=\"team icon\"/>\r\n            </div>\r\n            <div className=\"field-away-team\">\r\n                <img src={Team2Icon} alt=\"team icon\"/>\r\n            </div>\r\n*/\r\n","import Team1Icon from '../resources/Team1Icon.svg'\r\nimport Team2Icon from '../resources/Team2Icon.svg'\r\nimport './TeamBanner.css'\r\n\r\nconst TeamBanner = () => {\r\n    return(\r\n        <div className=\"team-banner\">\r\n            <div className=\"team-banner-container\">\r\n                <div className=\"icon-container\">\r\n                    <img  src={Team2Icon} alt=\"Home Team\"/>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <img  src={Team1Icon} alt=\"Away Team\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TeamBanner;","import { useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nimport LeagueIcon from './resources/LeagueIcon.svg'\nimport Header from './Components/Header';\nimport SubBoard from './Components/SubBoard';\nimport Field from './Components/Field';\nimport TeamBanner from './Components/TeamBanner';\n\nconst convert = require(\"xml-js\");\n\nfunction App() {\n  const [data, setData] = useState();\n  const [match, setMatch] = useState();\n\n  useEffect(() => {\n    try{\n        axios\n          .get(`https://static.yinzcam.com/interviews/web/api/${match}.xml`, {\n            'Content-Type': \"applications/xml\",\n            'Cache-Control': 'max-age=30',\n            // the dom re-renders on every api call with setData... I'll need to figure this out.\n            // header is max-age=30, should I have dynamically called this somehow?\n          })\n          .then((res) => {\n            const parser = JSON.parse(\n              convert.xml2json(res.data, {compact: true, spaces: 2})\n            );\n            // Only need xml metadata for error handling.\n            let newData = parser.Formation;\n            if(newData === data){\n              console.log(\"no new data\");\n              return;\n            }\n            else setData(newData);\n          })\n          .catch((err) => {\n            console.log(\"error: \", err);\n          })\n        }catch(e){\n          console.log(e);\n        }\n\n  }, [match /*data*/]);\n\n  return(\n    <div className=\"App\">\n      { // empty state ? loading : app components\n        data == null\n        ? <div className=\"search-pane\">\n\n            <div className=\"search-pane-container\">\n            <img src={LeagueIcon} alt=\"logo\"/>\n              <input placeholder='match 1, 2, 3'\n                    value={match}\n                    onChange={e => setMatch(e.target.value)}>\n              </input>\n            </div>\n          </div>\n        : <div className=\"App-container\">\n              <Header timeStamp={data.Timestamp._text} location={data.Venue._text}/>\n              <div className=\"components\">\n                <TeamBanner/>\n                <Field forms={data.Formations}/>\n                <SubBoard subs={data.Substitutes}/>\n              </div>\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}